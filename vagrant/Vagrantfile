Vagrant.configure("2") do |config|

  config.vm.define "alma", autostart: false do |alma|
    alma.vm.box = "almalinux/9"
    alma.vm.provider :libvirt do |lv|
      lv.title = 'alma'
    end
  end

  config.vm.define "fedora", autostart: true, primary: true do |fedora|
    fedora.vm.box = "fedora/38-cloud-base"
    fedora.vm.provider :libvirt do |lv|
      lv.title = 'fedora'
    end
  end

  config.vm.define "oracle", autostart: false do |oracle|
    oracle.vm.box = "oraclelinux/9-btrfs"
    oracle.vm.box_url = "https://oracle.github.io/vagrant-projects/boxes/oraclelinux/9-btrfs.json"
    oracle.vm.provider :libvirt do |lv|
      lv.title = 'oracle'
    end
  end
 
  config.vm.provider :libvirt do |lv|
    lv.cpus = 4
    lv.memory = 4096
    lv.video_type = 'virtio'
    lv.graphics_type = 'spice'
    lv.default_prefix = ''
    lv.qemu_use_session = false
  end

  config.vm.synced_folder "../ansible", "/vagrant", type: "rsync"

  #config.vagrant.plugins = ["vagrant-reload"]
  config.vm.provision "shell", inline: "yum --assumeyes --quiet update"
  config.vm.provision :reload

  config.vm.provision "shell",
    privileged: false,
    inline: <<-SHELL
      sudo yum --assumeyes --quiet install git python3-pip
      cd /vagrant
      rm -r .venv || true
      python -m venv --upgrade-deps .venv && source .venv/bin/activate
      #export ANSIBLE_PYTHON_INTERPRETER=/vagrant/.venv/bin/python
      pip install -r pip_requirements.txt
      ansible-galaxy install -r galaxy_requirements.yml
      ansible --version
      ansible-playbook -i hosts run.yml
    SHELL
end
