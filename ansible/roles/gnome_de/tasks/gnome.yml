- name: "Add flathub repo"
  ansible.builtin.include_tasks: "repos/flathub.yml"

- name: "Add gnome packages"
  ansible.builtin.yum:
    state: present
    name:
      - "@base-x"
      - gnome-session-xsession
      - control-center
      - krb5-libs
      - gnome-tweak-tool
      - dconf-editor
      - python3-psutil
      - dbus-x11
      - dnsmasq
  become: true

- name: "Setup Wayland"
  ansible.builtin.lineinfile:
    path: /etc/gdm/custom.conf
    regexp: 'WaylandEnable='
    line: WaylandEnable=false
  become: true

- name: "Get default systemd target"
  ansible.builtin.command: systemctl get-default # noqa: command-instead-of-module
  register: contents
  changed_when: false

- name: "Set default systemd target"
  ansible.builtin.command: systemctl set-default graphical.target
  when: contents.stdout != "graphical.target"
  become: true
  changed_when: false
# -----------------------------------------------------------------------------------------------
# GNOME EXTENSIONS

- name: "Add gnome extension drop-down terminal"
  ansible.builtin.import_role:
    name: jaredhocutt.gnome_extensions
  vars:
    gnome_extension_ids:
      - 3780

- name: "Setup gnome extension drop-down terminal"
  community.general.dconf:
    key: "{{ item.key }}"
    value: "{{ item.value | string }}"
  loop:
    - { key: "/com/github/amezin/ddterm/ddterm-toggle-hotkey", value: "['<Control>grave']" }
    - { key: "/com/github/amezin/ddterm/use-system-font", value: "false" }
    - { key: "/com/github/amezin/ddterm/custom-font", value: "'Ubuntu Mono 11'" }
    - { key: "/com/github/amezin/ddterm/tab-policy", value: "'always'" }
    - { key: "/com/github/amezin/ddterm/show-scrollbar", value: "false" }
    - { key: "/com/github/amezin/ddterm/tab-position", value: "'top'" }
    - { key: "/com/github/amezin/ddterm/theme-variant", value: "'system'" }
    - { key: "/com/github/amezin/ddterm/use-theme-colors", value: "true" }
    - { key: "/com/github/amezin/ddterm/window-maximize", value: "true" }
    - { key: "/com/github/amezin/ddterm/palette", value: "['rgb(0,0,0)', 'rgb(170,0,0)', 'rgb(207,217,227)', 'rgb(170,85,0)', 'rgb(0,0,170)', 'rgb(170,0,170)', 'rgb(0,170,170)', 'rgb(170,170,170)', 'rgb(85,85,85)', 'rgb(255,85,85)', 'rgb(85,255,85)', 'rgb(255,255,85)', 'rgb(85,85,255)', 'rgb(255,85,255)', 'rgb(85,255,255)', 'rgb(255,255,255)']" }
    - { key: "/com/github/amezin/ddterm/transparent-background", value: "false" }

- name: "Workaround for gnome extension drop-down terminal"
  ansible.builtin.command:
    cmd: glib-compile-schemas ~/.local/share/gnome-shell/extensions/ddterm@amezin.github.com/schemas/
    creates: ~/.local/share/gnome-shell/extensions/ddterm@amezin.github.com/schemas/gschemas.compiled

- name: "Add Desktop Icons NG extenstion"
  ansible.builtin.import_role:
    name: jaredhocutt.gnome_extensions
  vars:
    gnome_extension_ids:
      - 2087

- name: "Setup Desktop Icons NG extenstion"
  community.general.dconf:
    key: "{{ item.key }}"
    value: "{{ item.value | string }}"
  loop:
    - { key: "/org/gnome/shell/extensions/ding/use-nemo", value: "true" }
    - { key: "/org/gnome/shell/extensions/ding/dark-text-in-labels", value: "true" }
  notify:
    - Workaround for Desktop Icons NG extenstion

# - name: "Add quake-mode extenstion"
#   ansible.builtin.import_role:
#     name: jaredhocutt.gnome_extensions
#   vars:
#     gnome_extension_ids:
#       - 1411
#
# - name: "Setup quake-mode extenstion"
#   community.general.dconf:
#     key: "{{ item.key }}"
#     value: "{{ item.value | string }}"
#   loop:
#     - { key: "/com/github/repsac-by/quake-mode/quake-mode-tray", value: "true" }
#     - { key: "/com/github/repsac-by/quake-mode/quake-mode-width", value: "100" }
#     - { key: "/com/github/repsac-by/quake-mode/quake-mode-height", value: "100" }
#     - { key: "/com/github/repsac-by/quake-mode/quake-mode-animation-time", value: "0.25" }
#     - { key: "/com/github/repsac-by/quake-mode/quake-mode-hide-from-overview", value: "true" }
#     - { key: "/com/github/repsac-by/quake-mode/accelerators/quake-mode-accelerator-1", value: "['<Primary>grave']" }
#     - { key: "/com/github/repsac-by/quake-mode/apps/app-1", value: "'org.gnome.Terminal.desktop'" }
#     - { key: "/com/github/repsac-by/quake-mode/quake-mode-hotkey", value: "['<Primary>grave']" }
#     - { key: "/com/github/repsac-by/quake-mode/quake-mode-app", value: "'org.gnome.Terminal.desktop'" }
#   tags:
#     - molecule-idempotence-notest
#
# - name: "Add quake-mode extenstion dependency"
#   ansible.builtin.yum:
#     name: xprop
#     state: present
#   become: true

# - name: "Add Unite extenstion"
#   ansible.builtin.import_role:
#     name: jaredhocutt.gnome_extensions
#   vars:
#     gnome_extension_ids:
#       - 1287
#
# - name: "Setup Unite extenstion"
#   community.general.dconf:
#     key: "{{ item.key }}"
#     value: "{{ item.value | string }}"
#   loop:
#     - { key: "/org/gnome/shell/extensions/unite/extend-left-box", value: "false" }
#     - { key: "/org/gnome/shell/extensions/unite/show-desktop-name", value: "false" }
#     - { key: "/org/gnome/shell/extensions/unite/hide-app-menu-icon", value: "true" }
#     - { key: "/org/gnome/shell/extensions/unite/hide-app-menu-arrow", value: "true" }
#     - { key: "/org/gnome/shell/extensions/unite/show-window-title", value: "'never'" }
#     - { key: "/org/gnome/shell/extensions/unite/greyscale-tray-icons", value: "true" }
#     - { key: "/org/gnome/shell/extensions/unite/show-window-buttons", value: "'never'" }
#     - { key: "/org/gnome/shell/extensions/unite/hide-window-titlebars", value: "'never'" }
#     - { key: "/org/gnome/shell/extensions/unite/hide-aggregate-menu-arrow", value: "true" }
#     - { key: "/org/gnome/shell/extensions/unite/hide-activities-button", value: "'never'" }
#     - { key: "/org/gnome/shell/extensions/unite/window-buttons-placement", value: "'last'" }
#     - { key: "/org/gnome/shell/extensions/unite/window-buttons-theme", value: "'united-dark'" }

- name: "Add Workspace indicator extenstion"
  ansible.builtin.import_role:
    name: jaredhocutt.gnome_extensions
  vars:
    gnome_extension_ids:
      - 21

- name: "Setup Workspaces"
  community.general.dconf:
    key: "{{ item.key }}"
    value: "{{ item.value | string }}"
  loop:
    - { key: "/org/gnome/mutter/dynamic-workspaces", value: "false" }
    - { key: "/org/gnome/mutter/workspaces-only-on-primary", value: "false" }
    - { key: "/org/gnome/shell/overrides/dynamic-workspaces", value: "false" }
    - { key: "/org/gnome/shell/overrides/workspaces-only-on-primary", value: "false" }
    - { key: "/org/gnome/shell/app-switcher/current-workspace-only", value: "true" }

- name: "Add No overview at start-up extenstion"
  ansible.builtin.import_role:
    name: jaredhocutt.gnome_extensions
  vars:
    gnome_extension_ids:
      - 4099

# - name: "Add Gradient Top Bar"
#   ansible.builtin.import_role:
#     name: jaredhocutt.gnome_extensions
#   vars:
#     gnome_extension_ids:
#       - 4955
# 
# - name: "Setup Gradient Top Bar"
#   community.general.dconf:
#     key: "{{ item.key }}"
#     value: "{{ item.value | string }}"
#   loop:
#     - { key: "/org/gnome/shell/extensions/org/pshow/gradienttopbar/colors", value: "['rgb(90,111,128)', 'rgb(193,206,222)']" }
# 
# - name: Flush handlers
#   ansible.builtin.meta: flush_handlers

- name: "Restart GUI session"
  ansible.builtin.include_tasks: "restart_gui.yml"

# - name: "Enable extensions"
#   ansible.builtin.include_tasks: "gnome_enable_extension.yml"
#   loop:
#     #- no-overview@fthx
#     - ding@rastersoft.com
#     #- quake-mode@repsac-by.github.com
#     #- ddterm@amezin.github.com
#     #- unite@hardpixel.eu
#     - workspace-indicator@gnome-shell-extensions.gcampax.github.com
#   loop_control:
#     loop_var: extension_name

# # https://askubuntu.com/questions/1403931/how-to-apply-system-theme-to-flatpak-apps-that-use-gtk4
# - name: "Get flatpak GTK_THEME" # noqa risky-shell-pipe
#   ansible.builtin.shell:
#     cmd: flatpak override --show | grep GTK_THEME | cut -d "=" -f2
#   register: flatpak_gtk_theme
#   changed_when: false
#
# - name: "Add dark theme for flatpak"
#   community.general.flatpak:
#     name: org.gtk.Gtk3theme.Adwaita-dark
#     state: present
#   become: true
#   when: flatpak_gtk_theme.stdout != "Adwaita-dark"
#
# - name: "Enable dark theme for flatpak"
#   ansible.builtin.command: flatpak override --env GTK_THEME=Adwaita-dark
#   become: true
#   when: flatpak_gtk_theme.stdout != "Adwaita-dark"
#   changed_when: true

- name: "Add ExtensionsManager app"
  community.general.flatpak:
    name: com.mattjakeman.ExtensionManager
    state: present
  become: true

# -----------------------------------------------------------------------------------------------
# GNOME APPEARANCE
#
# - name: "Enable dark color scheme"
#   community.general.dconf:
#     key: "/org/gnome/desktop/interface/color-scheme"
#     value: "'prefer-dark'"
#
# - name: "Enable dark gtk theme"
#   community.general.dconf:
#     key: "/org/gnome/desktop/interface/gtk-theme"
#     value: "'Adwaita-dark'"
#
# - name: "Enable personal cursors and icond"
#   when: ansible_distribution == "Fedora"
#   block:
#     - name: "Add dmz cursors"
#       ansible.builtin.yum:
#         name: dmz-cursor-themes
#         state: present
#       become: true
#     - name: "Enable dmz cursor"
#       community.general.dconf:
#         key: "/org/gnome/desktop/interface/cursor-theme"
#         value: "'DMZ-White'"

#     - name: "Add gnome icon theme"
#       ansible.builtin.yum:
#         name: gnome-icon-theme
#         state: present
#       become: true
#     - name: "Enable gnome icon theme"
#       community.general.dconf:
#         key: "/org/gnome/desktop/interface/icon-theme"
#         value: "'gnome'"

- name: "Create personal fonts directory"
  ansible.builtin.file:
    path: ~/.local/share/fonts/
    state: directory
    mode: u=rwx,g=rx,o=rx

# - name: "Add bitstream-vera fonts"
#   ansible.builtin.unarchive:
#     src: https://ftp.gnome.org/pub/GNOME/sources/ttf-bitstream-vera/1.10/ttf-bitstream-vera-1.10.zip
#     dest: ~/.local/share/fonts/
#     remote_src: true
#     creates: ~/.local/share/fonts/ttf-bitstream-vera-1.10/
#   register: fonts_state

- name: "Add ubuntu fonts"
  ansible.builtin.unarchive:
    src: https://assets.ubuntu.com/v1/0cef8205-ubuntu-font-family-0.83.zip
    dest: ~/.local/share/fonts/
    remote_src: true
    creates: ~/.local/share/fonts/ubuntu-font-family-0.83/
  register: fonts_state

- name: "Caching personal fonts"
  ansible.builtin.command: fc-cache -f ~/.local/share/fonts/
  when: fonts_state.changed # noqa: no-handler
  changed_when: true

- name: "Enable personal fonts"
  community.general.dconf:
    key: "{{ item.key }}"
    value: "{{ item.value | string }}"
  loop:
    - { key: "/org/gnome/desktop/interface/monospace-font-name", value: "'Ubuntu Mono 11'" }
    - { key: "/org/gnome/desktop/interface/document-font-name", value: "'Ubuntu Italic 11'" }
    - { key: "/org/gnome/desktop/interface/font-name", value: "'Ubuntu 11'" }
    - { key: "/org/gnome/desktop/wm/preferences/titlebar-uses-system-font", value: "true" }
    - { key: "/org/gnome/desktop/wm/preferences/titlebar-font", value: "'Ubuntu Medium 11'" }
    - { key: "/org/gnome/desktop/interface/font-antialiasing", value: "'rgba'" }

- name: "Setup background and screensaver"
  ansible.builtin.file:
    path: /usr/share/backgrounds/custom
    state: directory
    mode: u=rwx,g=rx,o=rx
  become: true

- name: "Setup background and screensaver"
  ansible.builtin.copy:
    src: wallpaper.jpg
    mode: u=rw,g=r,o=r
    dest: /usr/share/backgrounds/custom
  become: true

- name: "Setup background and screensaver"
  community.general.dconf:
    key: "{{ item.key }}"
    value: "{{ item.value | string }}"
  loop:
    - { key: "/org/gnome/desktop/background/primary-color", value: "'#2e3436'" }
    - { key: "/org/gnome/desktop/background/picture-options", value: "'wallpaper'" }
    - { key: "/org/gnome/desktop/background/picture-uri", value: "'file:///usr/share/backgrounds/custom/wallpaper.jpg'" }
    - { key: "/org/gnome/desktop/screensaver/primary-color", value: "'#2e3436'" }
    - { key: "/org/gnome/desktop/screensaver/picture-options", value: "'wallpaper'" }
    - { key: "/org/gnome/desktop/screensaver/picture-uri", value: "'file:///usr/share/backgrounds/custom/wallpaper.jpg'" }

- name: "Enable nignt-light"
  community.general.dconf:
    key: "/org/gnome/settings-daemon/plugins/color/night-light-enabled"
    value: "true"

- name: "Setup button layout"
  community.general.dconf:
    key: "/org/gnome/desktop/wm/preferences/button-layout"
    value: "'appmenu:minimize,maximize,close'"

- name: "Enable weekday on clock"
  community.general.dconf:
    key: "/org/gnome/desktop/interface/clock-show-weekday"
    value: "true"

- name: "Setup battery indicator"
  community.general.dconf:
    key: "/org/gnome/desktop/interface/show-battery-percentage"
    value: "true"

- name: "Setup wm keybindings"
  community.general.dconf:
    key: "{{ item.key }}"
    value: "{{ item.value | string }}"
  loop:
    - { key: "/org/gnome/desktop/wm/keybindings/close", value: "['<Super>q']" }
    - { key: "/org/gnome/desktop/wm/keybindings/show-desktop", value: "['<Super>d']" }
    - { key: "/org/gnome/desktop/wm/keybindings/switch-applications", value: "@as []" }
    - { key: "/org/gnome/desktop/wm/keybindings/switch-applications-backward", value: "@as []" }
    - { key: "/org/gnome/desktop/wm/keybindings/switch-windows", value: "['<Alt>Tab']" }
    - { key: "/org/gnome/desktop/wm/keybindings/switch-to-workspace-1", value: "['<Primary>1']" }
    - { key: "/org/gnome/desktop/wm/keybindings/switch-to-workspace-2", value: "['<Primary>2']" }
    - { key: "/org/gnome/desktop/wm/keybindings/switch-to-workspace-3", value: "['<Primary>3']" }
    - { key: "/org/gnome/desktop/wm/keybindings/switch-to-workspace-4", value: "['<Primary>4']" }
    - { key: "/org/gnome/desktop/wm/keybindings/move-to-workspace-1", value: "['<Primary><Shift>exclam']" }
    - { key: "/org/gnome/desktop/wm/keybindings/move-to-workspace-2", value: "['<Primary><Shift>at']" }
    - { key: "/org/gnome/desktop/wm/keybindings/move-to-workspace-3", value: "['<Primary><Shift>numbersign']" }
    - { key: "/org/gnome/desktop/wm/keybindings/move-to-workspace-4", value: "['<Primary><Shift>dollar']" }

- name: "Special settings on virtual env"
  when: ansible_virtualization_role == "guest"
  block:
    - name: "Disable lock screen and auto sleeping"
      community.general.dconf:
        key: "{{ item.key }}"
        value: "{{ item.value | string }}"
      loop:
        - { key: "/org/gnome/desktop/lockdown/disable-lock-screen", value: "true" }
        - { key: "/org/gnome/desktop/screensaver/lock-enabled", value: "false" }
        - { key: "/org/gnome/desktop/session/idle-delay", value: "uint32 0" }
        - { key: "/org/gnome/settings-daemon/plugins/power/sleep-inactive-ac-type", value: "'nothing'" }
        - { key: "/org/gnome/desktop/notifications/show-in-lock-screen", value: "false" }

    - name: "Setup virtual screen"
      ansible.builtin.copy:
        src: monitors.xml
        dest: ~/.config/
        mode: u=rw,g=r,o=r

    - name: "Enable gdm autologin"
      ansible.builtin.blockinfile:
        dest: /etc/gdm/custom.conf
        marker: "#<!-- {mark} ANSIBLE MANAGED BLOCK gnome autologin -->"
        insertafter: "\\[daemon\\]"
        block: |
          AutomaticLoginEnable=True
          AutomaticLogin={{ ansible_user_id }}
      become: true

- name: "Restart GUI session"
  ansible.builtin.include_tasks: "restart_gui.yml"

